@model EmployeeViewModel
@{
    ViewData["Title"] = "Employees";
}
@{
    var addEmployeeViewModel = ViewData["AddEmployeeViewModel"] as AddEmployeeViewModel;
    var editEmployeeViewModel = ViewData["EditEmployeeViewModel"] as EditEmployeeViewModel;
}

<partial name="_AddEmployee" model="addEmployeeViewModel" />
<div id="delete-employee-modal" class="modal">
    <div class="modal-content confirm-delete-modal"></div>
</div>
<div id="editEmployeeModal" class="modal">
    <div class="modal-content add-employee-container"></div>
</div>

<div class="projects-container">
    <div class="side-by-side">
        <h2>Team Members</h2>
        <button class="btn btn-add-new" data-modal="true" data-target="#addEmployeeModal" asp-controller="Employee" asp-action="AddEmployee">Add Team Member</button>
    </div>

    <div class="project-view">
        @if (!Model.Employees.Any())
        {
            <h4>There are no team members to show.</h4>
        }
        else
        {
            @foreach (ApplicationUser employee in Model.Employees)
            {
                @await Html.PartialAsync("_MemberCard", employee)
            }
        }
    </div>
</div>